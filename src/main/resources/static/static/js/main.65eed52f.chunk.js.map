{"version":3,"sources":["app/reducers/auth/authSlice.js","components/main/styles/mainStyles.js","app/rest/restUtil.js","components/users/list/Users.js","components/products/form/ProductForm.js","components/products/list/Products.js","components/login/Login.js","components/logout/Logout.js","components/login/auth/LoginAuth.js","components/main/routing/MainRoutes.js","components/main/linkDefs.js","components/main/Main.js","App.js","app/store.js","serviceWorker.js","index.js","components/main/main.module.css","components/login/img/btn_google_dark_normal_ios.svg"],"names":["authSlice","createSlice","name","initialState","authenticated","reducers","logIn","state","logOut","actions","isAuthenticated","auth","useStyles","makeStyles","theme","createStyles","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","marginTop","flexGrow","icon","fontSize","down","serverURL","PROTOCOL","getReqConfig","method","token","localStorage","getItem","reqConfig","crossDomain","headers","Authorization","deleteById","id","uri","thenFunc","updateDataState","axios","delete","then","catch","err","screenData","console","log","getForData","get","data","paper","textAlign","marginBottom","maxWidth","delBtn","float","withRouter","props","classes","useState","dataState","useEffect","users","map","item","index","Paper","className","key","style","IconButton","color","aria-label","component","onClick","Grid","container","xs","md","List","ListItem","button","ListItemText","primary","secondary","firstName","Divider","divider","lastName","birthDate","phoneNumber","flexDirection","header","fontWeight","fontFamily","margin","input","onSubmit","useCallback","newData","oldStateData","redirectCallback","oldState","updateProductsState","history","replace","post","concat","useForm","register","handleSubmit","errors","watch","Fragment","TextField","required","label","variant","error","prodName","inputRef","maxLength","type","InputLabelProps","shrink","weight","min","max","grossPrice","netPrice","Button","useSelector","exact","path","render","to","loginGoogleBar","backgroundColor","borderRadius","borderWidth","verticalAlign","height","window","location","assign","Icon","src","LoginImg","position","alt","dispatch","useDispatch","match","search","length","setItem","MainRoutes","Typography","paragraph","href","Users","Products","Login","LoginAuth","Logout","linkDefs","dest","text","menuLinks","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","edge","noWrap","Drawer","event","link","activeClassName","cls","linkActive","navLink","join","App","configureStore","reducer","authReducer","Boolean","hostname","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.65eed52f.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n// doesn't actually mutate the state because it uses the Immer library,\n// which detects changes to a \"draft state\" and produces a brand new\n// immutable state based off those changes\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    authenticated: false,\n  },\n  reducers: {\n    logIn: (state) => {\n      state.authenticated = true;\n    },\n    logOut: (state) => {\n      state.authenticated = false;\n    },\n  },\n});\n\nexport const { logIn, logOut } = authSlice.actions;\n\nexport const isAuthenticated = (state) => state.auth.authenticated;\n\nexport default authSlice.reducer;\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    hide: {\n      display: \"none\",\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: \"nowrap\",\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: \"hidden\",\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      marginTop: theme.spacing(7),\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    icon: {\n      fontSize: 40,\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.down(\"xs\")]: {\n        fontSize: 30,\n        marginRight: theme.spacing(3),\n      },\n    },\n  })\n);","import axios from \"axios\";\nimport {\n  SERVER_DOMAIN_AND_PORT,\n  CLIENT_DOMAIN_AND_PORT,\n  PROTOCOL\n} from \"../../config/config\";\n\n\nconst serverURL = PROTOCOL + \"://\" + SERVER_DOMAIN_AND_PORT;\nexport const GOOGLE_PROVIDER = \"google\";\n\nexport const getAuthUrl = (provider) =>\n  serverURL +\n  \"/oauth2/authorize/\" +\n  provider +\n  \"?redirect_uri=\" +\n  PROTOCOL +\n  \"://\" +\n  CLIENT_DOMAIN_AND_PORT +\n  \"/login/auth\";\n\nexport const getReqConfig = (method) => {\n  const token = localStorage.getItem(\"token\");\n  let reqConfig = {};\n  if (token != null) {\n    reqConfig = {\n      crossDomain: true,\n      headers: {\n        Authorization: \"Bearer \" + token,\n      },\n    };\n  }\n  return reqConfig;\n};\n\nexport const deleteById = (id, uri, thenFunc, updateDataState) => {\n  axios\n    .delete(serverURL + uri + id, getReqConfig())\n    .then(() => {\n      thenFunc();\n    })\n    .catch((err) => {\n      updateDataState({ screenData: [] });\n      console.log(err);\n    });\n};\n\nexport const getForData = (uri, updateDataState) => {\n  axios\n    .get(serverURL + uri, getReqConfig())\n    .then((data) => {\n      updateDataState({ screenData: data.data });\n      console.log(data);\n    })\n    .catch((err) => {\n      updateDataState({ screenData: [] });\n      console.log(err);\n    });\n};\n\nexport const postData = (\n  uri,\n  newData,\n  oldStateData,\n  updateDataState,\n  redirectCallback\n) => {\n  axios\n    .post(serverURL + uri, newData, getReqConfig())\n    .then((data) => {\n      updateDataState({\n        screenData: oldStateData.screenData.concat(data.data),\n      });\n      console.log(data);\n      if (redirectCallback != null) {\n        redirectCallback();\n      }\n    })\n    .catch((err) => {\n      updateDataState({ screenData: [].concat(oldStateData.screenData) });\n      console.log(err);\n    });\n};\n","import React, { useState, useEffect } from \"react\";\nimport cls from \"./users.module.css\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { deleteById, getForData } from \"../../../app/rest/restUtil\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Paper from \"@material-ui/core/Paper\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      fontSize: \"0.9em\",\n      textAlign: \"left\",\n      marginBottom: \"2%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      maxWidth: 800,\n    },\n    delBtn: { float: \"right\" },\n  })\n);\n\n\nconst Users = (props) => {\n  const classes = useStyles();\n  const [dataState, updateDataState] = useState({ screenData: [] });\n\n  useEffect(() => {\n    getForData(\"/users/all\", updateDataState);\n  }, []);\n  \n  const users = dataState.screenData.map((item, index) => (\n    <Paper className={classes.paper} key={item.id}>\n      <h2 style={{ display: \"inline\" }}>User {index + 1}</h2>\n      <IconButton\n          color=\"secondary\"\n          aria-label=\"delete\"\n          component=\"div\"\n          className={classes.delBtn}\n          onClick={() =>\n            deleteById(\n              item.id,\n              \"/users/delete/\",\n              () => getForData(\"/users/all\", updateDataState),\n              updateDataState\n            )\n          }\n        >\n          <DeleteForeverIcon />\n        </IconButton>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={6}>\n          <List>\n            <ListItem button>\n              <ListItemText primary=\"First name\" secondary={item.firstName} />\n            </ListItem>\n            <Divider />\n            <ListItem button divider>\n              <ListItemText primary=\"Last name\" secondary={item.lastName} />\n            </ListItem>\n          </List>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <List>\n            <ListItem button>\n              <ListItemText primary=\"Birth date\" secondary={item.birthDate} />\n            </ListItem>\n            <Divider />\n            <ListItem button divider>\n              <ListItemText primary=\"Phone\" secondary={item.phoneNumber} />\n            </ListItem>\n          </List>\n        </Grid>\n      </Grid>\n    </Paper>\n  ));\n\n  return <div className={classes.root}>{users}</div>;\n};\n\nexport default withRouter(Users);\n","import React, { useCallback } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { postData } from \"../../../app/rest/restUtil\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      maxWidth: 800,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n    icon: {\n      fontSize: 45,\n      [theme.breakpoints.down(\"xs\")]: {\n        fontSize: 30,\n        marginRight: theme.spacing(3),\n      },\n    },\n    header: {\n      fontWeight: \"bold\",\n      fontFamily: \"Arial\",\n      fontSize: 18,\n      margin: 10,\n    },\n    input: {\n      maxWidth: 250,\n      margin: 15,\n    },\n  })\n);\n\nconst ProductForm = (props) => {\n  const classes = useStyles();\n  const onSubmit = useCallback(\n    (data) => {\n      postData(\n        \"/products/add\",\n        data,\n        props.oldState,\n        props.updateProductsState,\n        () => props.history.replace('/products/list')\n      );\n    },\n    [props.oldState, props.updateProductsState, props.history]\n  );\n\n  const { register, handleSubmit, watch, errors } = useForm();\n  return (\n    <React.Fragment>\n      <Paper className={classes.root}>\n        <div className={classes.header}>Add product</div>\n        <TextField\n          required\n          id=\"prodName\"\n          name=\"prodName\"\n          label=\"Product Name\"\n          className={classes.input}\n          variant=\"outlined\"\n          error={!!errors.prodName}\n          inputRef={register({ required: true, maxLength: 250 })}\n        />\n        {errors.prodName && \"Product name length invalid\"}\n        <TextField\n          required\n          id=\"weight\"\n          name=\"weight\"\n          label=\"Weight\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          className={classes.input}\n          variant=\"outlined\"\n          error={!!errors.weight}\n          inputRef={register({ required: true, min: 0, max: 150 })}\n        />\n        {errors.weight && \"Weight value invalid\"}\n        <TextField\n          required\n          id=\"grossPrice\"\n          name=\"grossPrice\"\n          label=\"Gross price\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          className={classes.input}\n          variant=\"outlined\"\n          error={!!errors.grossPrice}\n          inputRef={register({ required: true, min: 0.01 })}\n        />\n        {errors.grossPrice && \"Gross price value invalid\"}\n        <TextField\n          required\n          id=\"netPrice\"\n          name=\"netPrice\"\n          label=\"Net price\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          className={classes.input}\n          variant=\"outlined\"\n          error={!!errors.netPrice}\n          inputRef={register({ required: true, min: 0.01 })}\n        />\n        {errors.netPrice && \"Net price value invalid\"}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          className={classes.input}\n          onClick={handleSubmit(onSubmit)}\n        >\n          Submit\n        </Button>\n      </Paper>\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(ProductForm);\n","import cls from \"./products.module.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { withRouter, NavLink, Route, Switch } from \"react-router-dom\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Paper from \"@material-ui/core/Paper\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport { useSelector } from \"react-redux\";\nimport { isAuthenticated } from \"../../../app/reducers/auth/authSlice\";\nimport { deleteById, getForData } from \"../../../app/rest/restUtil\";\nimport ProductForm from \"../form/ProductForm\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      marginTop: 25,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      fontSize: \"0.9em\",\n      textAlign: \"left\",\n      marginBottom: \"2%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      maxWidth: 800,\n    },\n    delBtn: { float: \"right\" },\n  })\n);\n\nconst Products = (props) => {\n  const classes = useStyles();\n  const authenticated = useSelector(isAuthenticated);\n  const [dataState, updateDataState] = useState({ screenData: [] });\n\n  useEffect(() => {\n    getForData(\"/products/list\", updateDataState);\n  }, []);\n\n  const users = dataState.screenData.map((item, index) => (\n    <Paper className={classes.paper} key={item.id}>\n      <h2 style={{ display: \"inline\" }}>Product {index + 1}</h2>\n      {authenticated && (\n        <IconButton\n          color=\"secondary\"\n          aria-label=\"delete\"\n          component=\"div\"\n          className={classes.delBtn}\n          onClick={() =>\n            deleteById(\n              item.id,\n              \"/products/delete/\",\n              () => getForData(\"/products/list\", updateDataState),\n              updateDataState\n            )\n          }\n        >\n          <DeleteForeverIcon />\n        </IconButton>\n      )}\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={6}>\n          <List>\n            <ListItem button>\n              <ListItemText primary=\"Product name\" secondary={item.prodName} />\n            </ListItem>\n            <Divider />\n            <ListItem button divider>\n              <ListItemText primary=\"Weight (kg)\" secondary={item.weight} />\n            </ListItem>\n          </List>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <List>\n            <ListItem button>\n              <ListItemText primary=\"Net price\" secondary={item.netPrice} />\n            </ListItem>\n            <Divider />\n            <ListItem button divider>\n              <ListItemText primary=\"Gross price\" secondary={item.grossPrice} />\n            </ListItem>\n          </List>\n        </Grid>\n      </Grid>\n    </Paper>\n  ));\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route\n          exact\n          path={\"/products/list\"}\n          render={() => (\n            <React.Fragment>\n              {authenticated && (\n                <NavLink to={\"/products/list/add\"}>\n                  <Button variant=\"contained\" color=\"primary\">\n                    Add Product\n                  </Button>\n                </NavLink>\n              )}\n              <div className={classes.root}>{users}</div>\n            </React.Fragment>\n          )}\n        />\n        <Route\n          path={\"/products/list/add\"}\n          render={() => (\n            <ProductForm\n              oldState={dataState}\n              updateProductsState={updateDataState}\n            />\n          )}\n        />\n      </Switch>\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(Products);\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport LoginImg from \"./img/btn_google_dark_normal_ios.svg\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { withRouter } from \"react-router-dom\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { GOOGLE_PROVIDER, getAuthUrl } from \"../../app/rest/restUtil\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    icon: {\n      fontSize: 45,\n      [theme.breakpoints.down(\"xs\")]: {\n        fontSize: 30,\n        marginRight: theme.spacing(3),\n      },\n    },\n    loginGoogleBar: {\n      backgroundColor: \"#4F8AFF\",\n      width: 250,\n      borderRadius: 2,\n      borderWidth: 1,\n      color: \"white\",\n      padding: 3,\n      textAlign: \"center\",\n      verticalAlign:\"center\",\n      marginLeft: -theme.spacing(1),\n      [theme.breakpoints.down(\"xs\")]: {\n        height: \"1.7em\",\n        marginLeft: -theme.spacing(3.5),\n        fontSize: 14,\n        width: 150,\n      },\n    },\n  })\n);\n\nconst Login = (props) => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <IconButton onClick={() => window.location.assign(getAuthUrl(GOOGLE_PROVIDER))}>\n        <Icon className={classes.icon}>\n          <img\n            src={LoginImg}\n            style={{\n              position: \"relative\",\n              zIndex: 1,\n              width: \"100%\",\n              height: \"100%\",\n            }}\n            alt=\"Login with google\"\n          />\n        </Icon>\n        <div className={classes.loginGoogleBar}>\n          Login with google\n        </div>\n      </IconButton>\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(Login);\n","import React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { logOut } from \"../../app/reducers/auth/authSlice\";\n\nconst Logout = (props) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(logOut());\n    props.history.replace(\"/\");\n  });\n  return <React.Fragment>Logging out...</React.Fragment>;\n};\n\nexport default withRouter(Logout);\n","import React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { logIn, logOut } from \"../../../app/reducers/auth/authSlice\";\n\nconst LoginAuth = (props) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const match = window.location.search.match(/token=(.+)/);\n    if (match && match.length === 2) {\n      localStorage.setItem(\"token\", match[1]);\n      props.history.replace(\"/users/list\");\n      dispatch(logIn());\n    } else {\n      dispatch(logOut());\n      props.history.replace(\"/\");\n    }\n  });\n  return <React.Fragment>Authenticating...</React.Fragment>;\n};\n\nexport default withRouter(LoginAuth);\n","import React from \"react\";\nimport Users from \"../../users/list/Users\";\nimport Products from \"../../products/list/Products\";\nimport Login from \"../../login/Login\";\nimport Logout from \"../../logout/Logout\";\nimport LoginAuth from \"../../login/auth/LoginAuth\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Switch, Route } from \"react-router-dom\";\n\nconst MainRoutes = (props) => {\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={() => (\n            <div>\n              <Typography paragraph style={{ fontWeight: \"bold\" }}>\n                Welcome to a sample React 'n Spring Boot 2 web page using: side\n                by side OAuth2 and Form Login, Thymeleaf, JQuery, Bootstrap,\n                Hibernate and H2 database\n              </Typography>\n              <Button\n                href=\"/admin/login\"\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\">\n                Admin panel\n              </Button>\n            </div>\n          )}\n        />\n        {props.authenticated && <Route path=\"/users/list\" render={Users} />}\n        <Route path=\"/products/list\" render={Products} />\n        <Route path=\"/login\" exact render={Login} />\n        <Route path=\"/login/auth\" exact render={LoginAuth} />\n        <Route path=\"/logout\" exact render={Logout} />\n      </Switch>\n    </React.Fragment>\n  );\n};\n\nexport default MainRoutes;\n","import React from 'react';\nimport AccessibilityNewIcon from \"@material-ui/icons/AccessibilityNew\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport HowToRegIcon from \"@material-ui/icons/HowToReg\";\nconst linkDefs =  (classes) => {\n\n    const linksArr =\n        [\n            {\n              dest: \"/login\",\n              text: \"Login\",\n              icon: <AccessibilityNewIcon className={classes.icon} />,\n              exact: true,\n              render: (auth) => !auth,\n            },\n            {\n              dest: \"/logout\",\n              text: \"Logout\",\n              icon: <LockIcon className={classes.icon} />,\n              exact: true,\n              render: (auth) => auth,\n            },\n            {\n              dest: \"/products/list\",\n              text: \"Products\",\n              icon: <FolderOpenIcon className={classes.icon} />,\n              exact: false,\n            },\n            {\n              dest: \"/users/list\",\n              text: \"Users\",\n              icon: <HowToRegIcon className={classes.icon} />,\n              exact: false,\n              render: (auth) => auth,\n            },\n          ];\n          return linksArr;\n} \n\nexport default linkDefs;\n\n","import React, { useState, useCallback } from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport cls from \"./main.module.css\";\r\nimport clsx from \"clsx\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { isAuthenticated } from \"../../app/reducers/auth/authSlice\";\r\nimport { useStyles } from \"./styles/mainStyles\";\r\nimport MainRoutes from \"./routing/MainRoutes\";\r\nimport linkDefs from \"./linkDefs\";\r\n\r\nconst Main = (props) => {\r\n  const authenticated = useSelector(isAuthenticated);\r\n  const classes = useStyles();\r\n\r\n  const menuLinks = useCallback(linkDefs(classes), [classes]);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = (event) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            OAuth2 Products\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {menuLinks.map((link, index) =>\r\n            (link.render != null ? link.render(authenticated) : true) ? (\r\n              <NavLink\r\n                to={link.dest}\r\n                activeClassName={[cls.linkActive, cls.navLink].join(\" \")}\r\n                className={cls.navLink}\r\n                exact={link.exact}\r\n                key={link.text}\r\n              >\r\n                <ListItem button>\r\n                  {link.icon}\r\n                  <ListItemText primary={link.text} />\r\n                </ListItem>\r\n              </NavLink>\r\n            ) : (\r\n              \"\"\r\n            )\r\n          )}\r\n        </List>\r\n        <Divider />\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <MainRoutes authenticated={authenticated} />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Main);\r\n","import React from \"react\";\r\nimport Main from \"./components/main/Main\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Main />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport authReducer from './reducers/auth/authSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkActive\":\"main_linkActive__1Wevk\",\"navLink\":\"main_navLink__wBJr7\"};","module.exports = __webpack_public_path__ + \"static/media/btn_google_dark_normal_ios.1bb80544.svg\";"],"sourceRoot":""}