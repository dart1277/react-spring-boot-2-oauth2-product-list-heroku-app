# Datasource properties
spring.datasource.url=jdbc:h2:~/test;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=psw
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# Hibernate strategy
spring.jpa.hibernate.ddl-auto=create-drop
# Naming strategy
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
# Heroku
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
#logging.level.org.springframework.web=DEBUG
#jwt
app.admin.psw=admin
app.jwt.expireTime=360000
app.jwt.secret=AC10E2525764CBFA1B8352B72DE641F97553243CED0324D4E04D15D0B84F9496
app.redirectUriParamName=redirect_uri
#security
spring.session.store-type=none
spring.security.oauth2.client.registration.google.clientId=749293784751-63nj04el8udq6vjfg0ivnja7btkh5vhh.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=CM2PD1Jl-OOnQ5YFd0dIMtxR
spring.security.oauth2.client.registration.google.redirectUri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.google.scope[0]=email
spring.security.oauth2.client.registration.google.scope[1]=profile
spring.security.oauth2.client.registration.facebook.clientId=3850458371691251
spring.security.oauth2.client.registration.facebook.clientSecret=1a16775de09e49efbbbe2763c924a623
spring.security.oauth2.client.registration.facebook.redirectUri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.facebook.scope[0]=email
spring.security.oauth2.client.registration.facebook.scope[1]=public_profile

xxx.host=https://abc.com
spring.security.oauth2.client.registration.xxx.client-id=aclientId
spring.security.oauth2.client.registration.xxx.client-secret=aSecret
spring.security.oauth2.client.registration.xxx.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.xxx.redirect-uri=http://localhost:4200/api/login/{registrationId}
spring.security.oauth2.client.provider.xxx.authorization-uri=${xxx.host}/services/oauth2/authorize
spring.security.oauth2.client.provider.xxx.token-uri=${xxx.host}/services/oauth2/token
spring.security.oauth2.client.provider.xxx.user-info-uri=${xxx.host}/services/oauth2/userinfo?version=latest
spring.security.oauth2.client.provider.xxx.user-info-authentication-method=form
spring.security.oauth2.client.provider.xxx.user-name-attribute=last_name
spring.security.oauth2.client.registration.xxx.scope[0]=email
spring.security.oauth2.client.registration.xxx.scope[1]=profile

logging.level.org.springframework.security=DEBUG